generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  status UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  UserProfile UserProfile?
  bookings    Booking[]

  @@map("users")
}

model UserProfile {
  id String @id @default(uuid())
  userId String @unique
  bio String?
  profession String
  address String
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}

model Flat{
  id String @id @default(uuid())
  squareFeet Int
  totalBedrooms Int
  totalRooms Int
  utilitiesDescription String
  location String
  description String
  rent Int
  availability Boolean @default(true)
  advanceAmount Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookings Booking[]

  @@map("flats")
}

model Booking{
  id String @id @default(uuid())
  flatId String
  userId String
  status BookingStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  flat Flat @relation(fields: [flatId], references: [id])

  @@map("bookings")
}

enum UserStatus {
  BLOCKED
  ACTIVE
  DELETED
}

enum BookingStatus {
  PENDING
  BOOKED
  REJECTED
}